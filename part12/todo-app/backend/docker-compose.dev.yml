version: '3.8'

services:
  server:
    image: todo-backend-dev
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes:
      - ./:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5001:5001
    depends_on:
      - 'mongo'
      - 'redis'
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./redis_data:/data
# docker-compose -f docker-compose.dev.yml up
# docker-compose -f docker-compose.dev.yml up -d              run in background
# docker-compose -f docker-compose.dev.yml down --volumes     to ensure that nothing is left and start from a clean slate
# docker exec -it wonderful_ramanujan bash
# https://stackoverflow.com/questions/33675914/redis-docker-connection-refused
# docker run --name=redis-devel --publish=6379:6379 --hostname=redis --restart=on-failure --detach redis:latest
